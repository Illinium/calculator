{"version":3,"sources":["components/display.js","components/button.js","components/clearButton.js","components/calculator.js","App.js","index.js"],"names":["Display","main","className","Button","props","indicator","isNaN","children","onClick","addingNumbers","ClearButton","clearHandler","Calculator","state","display","action","firstNumbers","secondNumbers","calculatedNumber","a","b","number","setState","result","newAction","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.798d10f8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './display.css';\r\n\r\nconst Display = ({main}) => {\r\n    return (\r\n        <div className=\"display\">{main}</div>\r\n    )\r\n};\r\n\r\nexport default Display;","import React from 'react';\r\n\r\nimport './button.css';\r\n\r\nconst Button = (props) => {\r\n    let indicator = !isNaN(props.children) || props.children === '.' || props.children === '=';\r\n    return (\r\n        <div className={`button ${indicator ? '' : 'orange'}`} onClick={() => props.addingNumbers(props.children)}>{props.children}</div>\r\n    )\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\n\r\nimport './clearButton.css';\r\n\r\nconst ClearButton = ({clearHandler}) => {\r\n    return (\r\n        <div className='clear' onClick={clearHandler}>\r\n            <p>Clear</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default ClearButton;","import React, { Component } from \"react\";\r\n\r\nimport Display from \"./display\";\r\nimport Button from \"./button\";\r\nimport ClearButton from \"./clearButton\";\r\nimport \"./calculator.css\";\r\n\r\nclass Calculator extends Component {\r\n  state = {\r\n    display: \"0\",\r\n    action: null,\r\n    firstNumbers: \"\",\r\n    secondNumbers: \"\",\r\n  };\r\n\r\n  calculatedNumber = (a, b, action) => {\r\n    switch (action) {\r\n      case \"*\":\r\n        return a * b;\r\n      case \"/\":\r\n        return a / b;\r\n      case \"+\":\r\n        return a + b;\r\n      case \"-\":\r\n        return a - b;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  addingNumbers = (number) => {\r\n    if (isNaN(number)) {\r\n      if (this.state.action === null) {\r\n        this.setState({\r\n          action: number,\r\n          display: this.state.display + number,\r\n        });\r\n      } else {\r\n        const result = this.calculatedNumber(\r\n          +this.state.firstNumbers,\r\n          +this.state.secondNumbers,\r\n          this.state.action\r\n        );\r\n        const newAction = number === \"=\" ? null : number;\r\n        this.setState({\r\n          display: result + newAction,\r\n          firstNumbers: result,\r\n          action: newAction,\r\n          secondNumbers: \"\",\r\n        });\r\n      }\r\n    } else {\r\n      if (this.state.action === null) {\r\n        this.setState({\r\n          display: this.state.display + number,\r\n          firstNumbers: this.state.firstNumbers + number,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          display: this.state.display + number,\r\n          secondNumbers: this.state.secondNumbers + number,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  clearHandler = () => {\r\n    this.setState({\r\n      display: \"\",\r\n      action: null,\r\n      firstNumbers: \"\",\r\n      secondNumbers: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"calculator\">\r\n        <Display main={this.state.display} />\r\n        <div className=\"buttons\">\r\n          <Button addingNumbers={this.addingNumbers}>7</Button>\r\n          <Button addingNumbers={this.addingNumbers}>8</Button>\r\n          <Button addingNumbers={this.addingNumbers}>9</Button>\r\n          <Button addingNumbers={this.addingNumbers}>/</Button>\r\n          <Button addingNumbers={this.addingNumbers}>4</Button>\r\n          <Button addingNumbers={this.addingNumbers}>5</Button>\r\n          <Button addingNumbers={this.addingNumbers}>6</Button>\r\n          <Button addingNumbers={this.addingNumbers}>*</Button>\r\n          <Button addingNumbers={this.addingNumbers}>1</Button>\r\n          <Button addingNumbers={this.addingNumbers}>2</Button>\r\n          <Button addingNumbers={this.addingNumbers}>3</Button>\r\n          <Button addingNumbers={this.addingNumbers}>-</Button>\r\n          <Button addingNumbers={this.addingNumbers}>.</Button>\r\n          <Button addingNumbers={this.addingNumbers}>0</Button>\r\n          <Button addingNumbers={this.addingNumbers}>=</Button>\r\n          <Button addingNumbers={this.addingNumbers}>+</Button>\r\n        </div>\r\n        <ClearButton clearHandler={this.clearHandler} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from 'react';\r\n\r\nimport Calculator from './components/calculator'\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Calculator />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}